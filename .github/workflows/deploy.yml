name: Deployment
on:
  push:
    branches:
      - master
  workflow_dispatch:
#test
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        id: cache-deps
        #nơi lưu trữ cache
        # uses: mygithub/myrepo
        #nơi lưu trữ trong local file
        uses: ./.github/actions/cached-deps
        with:
          caching: 'false'
      - name: Output information
        run: echo "Cache used? ${{ steps.cache-deps.output.used-cache }}"
      - name: Lint code
        run: npm run lint
  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: install_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    # permission:
    #   id-token: write
    #   contents: read # This is required for actions/checkout
    needs: build
    runs-on: ubuntu-latest
    steps:
#       - uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.3.7
#       - name: Kiểm tra terraform version
#         run: terraform version
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Terraform init
        run: terraform init
      - name: Install S3
        run: |
         # aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
         # aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws sts get-caller-identity
          terraform apply -auto-approve
      - name: Deploy site
        id: deploy
        uses: ./.github/actions/deploy-s3-javascript
        with:
          bucket: gh-js
          dist-folder: ./dist
          # bucket-region: us-east-2
      - name: Output information
        run: |
          echo "Live URL: ${{ steps.deploy.outputs.website-url }}"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run python file
        id: web_health_check
        run: |
          echo "result=$(url=gh-js.s3-website-us-east-1.amazonaws.com python url-check.py)" >> $GITHUB_OUTPUT
          sleep 30
      - name: Check result
        continue-on-error: true
        if: ${{ steps.web_health_check.outputs.result == '200' }}
#         run: terraform destroy -auto-approve
        run: echo ${{ steps.web_health_check.outputs.result }} 
      - name: Check result 1
        if: ${{ steps.web_health_check.outputs.result != '200' }}
        run: echo ${{ steps.web_health_check.outputs.result }} 
#   test-url:
#     needs: deploy
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.10"
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
#       # - name: Test with pytest
#       #   run: pip test
#       - name: Run python file
#         id: web_health_check
#         run: |
#           echo "result=$(url=gh-js.s3-website-us-east-1.amazonaws.com python url-check.py)" >> $GITHUB_OUTPUT
#       #     url=google.com python url-check.py
#       # echo "result=$(url=google1.com python url-check.py)" >> $GITHUB_OUTPUT
#       #  echo "result=$(url=${{ needs.deploy.outputs.website-url }} python url-check.py)" >> $GITHUB_OUTPUT
#       # echo "result=$(url=gh-js.s3-website-us-east-1.amazonaws.com python url-check.py)" >> $GITHUB_OUTPUT
#       #     name: dist-files
#       #     path: ./dist
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#       - name: Terraform init
#         run: terraform init
#       - name: Check result 2
#         continue-on-error: true
#         if: ${{ steps.web_health_check.outputs.result == '200' }}
#         run: terraform destroy -auto-approve -var-file=variables.tfvars
#       - name: Check result 1
#         # continue-on-error: true
#         if: ${{ steps.web_health_check.outputs.result != '200' }}
#         run: echo ${{ steps.web_health_check.outputs.result }} 
